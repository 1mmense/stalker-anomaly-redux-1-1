--Tweaki_Breeki's
---______----_-----------------_______-_-------------------------------_----------------------------------------_-_-------------
--|--____|--(_)---------------|__---__|-|-----------------------------|-|-----/\-------------------------------|-(_)------------
--|-|__-__-_-_-_-__-___-_-__-----|-|--|-|__---___-_-__-_-__-___---__-_|-|----/--\---_-__---___--_-__-___---__-_|-|_--___--___---
--|--__/-_`-|-|-'__/-_-\-'__|----|-|--|-'_-\-/-_-\-'__|-'_-`-_-\-/-_`-|-|---/-/\-\-|-'_-\-/-_-\|-'_-`-_-\-/-_`-|-|-|/-_-\/-__|--
--|-|-|-(_|-|-|-|-|--__/-|-------|-|--|-|-|-|--__/-|--|-|-|-|-|-|-(_|-|-|--/-____-\|-|-|-|-(_)-|-|-|-|-|-|-(_|-|-|-|--__/\__-\--
--|_|--\__,_|_|_|--\___|_|-------|_|--|_|-|_|\___|_|--|_|-|_|-|_|\__,_|_|-/_/----\_\_|-|_|\___/|_|-|_|-|_|\__,_|_|_|\___||___/--
--Version 1.5
--17/07/2021
--This file should be in gamedata\scripts\
--Adds ember particles and fire crackle sound effects randomly to each thermal anomaly in the current level.
--Checks the bind_anomaly_field.script 'dyn_anomalies' array to see if any dynamic anomalies are enabled or disabled.

local sparks = particles_object("explosions\\effects\\campfire_hot_sparks")
local crackle_snd = sound_object("anomaly\\crackle1")

local tb_sparks = 0
local tb_rerun_count = 0
local tb_thermals = {}
local current_level,dyn_anoms

function actor_on_first_update()
	current_level = level.name()
	collect_all_thermals()
end

function collect_all_thermals()
	dyn_anoms = bind_anomaly_field.dyn_anomalies
	tb_thermals = {}
	for i=1, 65534 do
		local se_obj = level.object_by_id(i)
		if se_obj then
			local objpos = se_obj:position()
			local objsec = se_obj:section()
			if string.find(objsec,"zone_mine_thermal") then
				if dyn_anoms[current_level] then
					if dyn_anoms[current_level][i] == nil then
						table.insert(tb_thermals,{i,objpos,se_obj})
					elseif dyn_anoms[current_level][i] == true then
						table.insert(tb_thermals,{i,objpos,se_obj})
					end
				else
					table.insert(tb_thermals,{i,objpos,se_obj})
				end
			end
		end
	end
end

function actor_on_update()
	if #tb_thermals ~= 0 then
		local tg = time_global()
		if (tg > tb_sparks) then
			tb_sparks = tg + math.floor(15000/#tb_thermals)
			makesparks()
			makecrackles()
		end
		if (tg > tb_rerun_count) then
			tb_rerun_count = tg + 60000
			collect_all_thermals()
		end
	end
end

function makesparks()
	local randomthermalA = tb_thermals[math.random(#tb_thermals)][2]
	sparks:play_at_pos(randomthermalA)
	local randomthermalB = tb_thermals[math.random(#tb_thermals)][2]
	sparks:play_at_pos(randomthermalB)
	local randomthermalC = tb_thermals[math.random(#tb_thermals)][2]
	sparks:play_at_pos(randomthermalC)
end

function makecrackles()
	local randnum = math.random(#tb_thermals)
	local randomposA = tb_thermals[randnum][2]
	local randomobjA = tb_thermals[randnum][3]
	crackle_snd = sound_object("anomaly\\crackle" .. math.random(1,3))
	crackle_snd:play_at_pos(randomobjA,randomposA)
	local randnum = math.random(#tb_thermals)
	local randomposB = tb_thermals[randnum][2]
	local randomobjB = tb_thermals[randnum][3]
	crackle_snd = sound_object("anomaly\\crackle" .. math.random(1,3))
	crackle_snd:play_at_pos(randomobjB,randomposB)
	local randnum = math.random(#tb_thermals)
	local randomposC = tb_thermals[randnum][2]
	local randomobjC = tb_thermals[randnum][3]
	crackle_snd = sound_object("anomaly\\crackle" .. math.random(1,3))
	crackle_snd:play_at_pos(randomobjC,randomposC)
end

function on_game_start()
	RegisterScriptCallback("actor_on_update", actor_on_update)
	RegisterScriptCallback("actor_on_first_update",actor_on_first_update)
end
